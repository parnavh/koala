stages:
  - publish
  - release

# Publish Docker images on every push to any branch
publish:
  stage: publish
  image: docker:cli
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - echo "Building and pushing Docker image for branch $CI_COMMIT_REF_NAME"
    - docker buildx create --use
    - docker buildx build --platform linux/amd64,linux/arm64 -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" . --push
    - |
      if [ "$CI_COMMIT_REF_NAME" == "main" ]; then
        echo "Tagging the main branch image as latest"
        docker buildx build --platform linux/amd64,linux/arm64 -t "$CI_REGISTRY_IMAGE:latest" . --push
      fi

# Runs when a release is created
release:
  stage: release
  image: docker:cli
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - echo "Building and pushing Docker image for release $CI_COMMIT_TAG"
    - docker buildx create --use
    - docker buildx build --platform linux/amd64,linux/arm64 -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" . --push
  rules:
    - if: $CI_COMMIT_TAG && $CI_PIPELINE_SOURCE == "release"
